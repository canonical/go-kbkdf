// Copyright 2021 Canonical Ltd.
// Licensed under the LGPLv3 with static-linking exception.
// See LICENCE file for details.

// This file is autogenerated with testdata/gentest.go

package kdf_test

import (
	"crypto"
	_ "crypto/sha1"
	_ "crypto/sha256"
	_ "crypto/sha512"
	"encoding/hex"
	"testing"

	. "github.com/canonical/go-sp800.108-kdf"

	. "gopkg.in/check.v1"
)

func Test(t *testing.T) { TestingT(t) }

func decodeHexString(c *C, s string) []byte {
	x, err := hex.DecodeString(s)
	c.Assert(err, IsNil)
	return x
}

type kdfSuite struct {}

var _ = Suite(&kdfSuite{})

type testData struct {
	key []byte
	fixed []byte
	iv []byte
	bitLength uint32
	expected []byte
}

func (s *kdfSuite) testCounterMode(c *C, prf PRF, data *testData) {
	c.Check(CounterModeKeyInternal(prf, data.key, data.fixed, data.bitLength), DeepEquals, data.expected)
}

func (s *kdfSuite) testFeedbackMode(c *C, prf PRF, data *testData, useCounter bool) {
	c.Check(FeedbackModeKeyInternal(prf, data.key, data.fixed, data.iv, data.bitLength, useCounter), DeepEquals, data.expected)
}

func (s *kdfSuite) testPipelineMode(c *C, prf PRF, data *testData, useCounter bool) {
	c.Check(PipelineModeKeyInternal(prf, data.key, data.fixed, data.bitLength, useCounter), DeepEquals, data.expected)
}
